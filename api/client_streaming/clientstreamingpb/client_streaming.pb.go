// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.1
// source: client_streaming/clientstreamingpb/client_streaming.proto

package clientstreamingpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Attack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Damage uint32 `protobuf:"varint,1,opt,name=damage,proto3" json:"damage,omitempty"`
}

func (x *Attack) Reset() {
	*x = Attack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_streaming_clientstreamingpb_client_streaming_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attack) ProtoMessage() {}

func (x *Attack) ProtoReflect() protoreflect.Message {
	mi := &file_client_streaming_clientstreamingpb_client_streaming_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attack.ProtoReflect.Descriptor instead.
func (*Attack) Descriptor() ([]byte, []int) {
	return file_client_streaming_clientstreamingpb_client_streaming_proto_rawDescGZIP(), []int{0}
}

func (x *Attack) GetDamage() uint32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

type Boss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Health int32  `protobuf:"varint,2,opt,name=health,proto3" json:"health,omitempty"`
}

func (x *Boss) Reset() {
	*x = Boss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_streaming_clientstreamingpb_client_streaming_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boss) ProtoMessage() {}

func (x *Boss) ProtoReflect() protoreflect.Message {
	mi := &file_client_streaming_clientstreamingpb_client_streaming_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boss.ProtoReflect.Descriptor instead.
func (*Boss) Descriptor() ([]byte, []int) {
	return file_client_streaming_clientstreamingpb_client_streaming_proto_rawDescGZIP(), []int{1}
}

func (x *Boss) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Boss) GetHealth() int32 {
	if x != nil {
		return x.Health
	}
	return 0
}

type ClientStreamingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BossID uint32  `protobuf:"varint,1,opt,name=bossID,proto3" json:"bossID,omitempty"`
	Attack *Attack `protobuf:"bytes,2,opt,name=attack,proto3" json:"attack,omitempty"`
}

func (x *ClientStreamingRequest) Reset() {
	*x = ClientStreamingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_streaming_clientstreamingpb_client_streaming_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamingRequest) ProtoMessage() {}

func (x *ClientStreamingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_streaming_clientstreamingpb_client_streaming_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamingRequest.ProtoReflect.Descriptor instead.
func (*ClientStreamingRequest) Descriptor() ([]byte, []int) {
	return file_client_streaming_clientstreamingpb_client_streaming_proto_rawDescGZIP(), []int{2}
}

func (x *ClientStreamingRequest) GetBossID() uint32 {
	if x != nil {
		return x.BossID
	}
	return 0
}

func (x *ClientStreamingRequest) GetAttack() *Attack {
	if x != nil {
		return x.Attack
	}
	return nil
}

type ClientStreamingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Boss *Boss `protobuf:"bytes,1,opt,name=boss,proto3" json:"boss,omitempty"`
}

func (x *ClientStreamingResponse) Reset() {
	*x = ClientStreamingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_streaming_clientstreamingpb_client_streaming_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamingResponse) ProtoMessage() {}

func (x *ClientStreamingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_streaming_clientstreamingpb_client_streaming_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamingResponse.ProtoReflect.Descriptor instead.
func (*ClientStreamingResponse) Descriptor() ([]byte, []int) {
	return file_client_streaming_clientstreamingpb_client_streaming_proto_rawDescGZIP(), []int{3}
}

func (x *ClientStreamingResponse) GetBoss() *Boss {
	if x != nil {
		return x.Boss
	}
	return nil
}

var File_client_streaming_clientstreamingpb_client_streaming_proto protoreflect.FileDescriptor

var file_client_streaming_clientstreamingpb_client_streaming_proto_rawDesc = []byte{
	0x0a, 0x39, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x75, 0x6e, 0x61,
	0x72, 0x79, 0x22, 0x20, 0x0a, 0x06, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x04, 0x42, 0x6f, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x22, 0x57, 0x0a, 0x16, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x62, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x22, 0x3a, 0x0a,
	0x17, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x62, 0x6f, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x75, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x42,
	0x6f, 0x73, 0x73, 0x52, 0x04, 0x62, 0x6f, 0x73, 0x73, 0x32, 0x69, 0x0a, 0x16, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x42, 0x6f, 0x73,
	0x73, 0x12, 0x1d, 0x2e, 0x75, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x75, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x28, 0x01, 0x42, 0x26, 0x5a, 0x24, 0x2e, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_streaming_clientstreamingpb_client_streaming_proto_rawDescOnce sync.Once
	file_client_streaming_clientstreamingpb_client_streaming_proto_rawDescData = file_client_streaming_clientstreamingpb_client_streaming_proto_rawDesc
)

func file_client_streaming_clientstreamingpb_client_streaming_proto_rawDescGZIP() []byte {
	file_client_streaming_clientstreamingpb_client_streaming_proto_rawDescOnce.Do(func() {
		file_client_streaming_clientstreamingpb_client_streaming_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_streaming_clientstreamingpb_client_streaming_proto_rawDescData)
	})
	return file_client_streaming_clientstreamingpb_client_streaming_proto_rawDescData
}

var file_client_streaming_clientstreamingpb_client_streaming_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_client_streaming_clientstreamingpb_client_streaming_proto_goTypes = []interface{}{
	(*Attack)(nil),                  // 0: unary.Attack
	(*Boss)(nil),                    // 1: unary.Boss
	(*ClientStreamingRequest)(nil),  // 2: unary.ClientStreamingRequest
	(*ClientStreamingResponse)(nil), // 3: unary.ClientStreamingResponse
}
var file_client_streaming_clientstreamingpb_client_streaming_proto_depIdxs = []int32{
	0, // 0: unary.ClientStreamingRequest.attack:type_name -> unary.Attack
	1, // 1: unary.ClientStreamingResponse.boss:type_name -> unary.Boss
	2, // 2: unary.ClientStreamingService.AttackBoss:input_type -> unary.ClientStreamingRequest
	3, // 3: unary.ClientStreamingService.AttackBoss:output_type -> unary.ClientStreamingResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_client_streaming_clientstreamingpb_client_streaming_proto_init() }
func file_client_streaming_clientstreamingpb_client_streaming_proto_init() {
	if File_client_streaming_clientstreamingpb_client_streaming_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_streaming_clientstreamingpb_client_streaming_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_streaming_clientstreamingpb_client_streaming_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Boss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_streaming_clientstreamingpb_client_streaming_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientStreamingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_streaming_clientstreamingpb_client_streaming_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientStreamingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_streaming_clientstreamingpb_client_streaming_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_client_streaming_clientstreamingpb_client_streaming_proto_goTypes,
		DependencyIndexes: file_client_streaming_clientstreamingpb_client_streaming_proto_depIdxs,
		MessageInfos:      file_client_streaming_clientstreamingpb_client_streaming_proto_msgTypes,
	}.Build()
	File_client_streaming_clientstreamingpb_client_streaming_proto = out.File
	file_client_streaming_clientstreamingpb_client_streaming_proto_rawDesc = nil
	file_client_streaming_clientstreamingpb_client_streaming_proto_goTypes = nil
	file_client_streaming_clientstreamingpb_client_streaming_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ClientStreamingServiceClient is the client API for ClientStreamingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientStreamingServiceClient interface {
	AttackBoss(ctx context.Context, opts ...grpc.CallOption) (ClientStreamingService_AttackBossClient, error)
}

type clientStreamingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewClientStreamingServiceClient(cc grpc.ClientConnInterface) ClientStreamingServiceClient {
	return &clientStreamingServiceClient{cc}
}

func (c *clientStreamingServiceClient) AttackBoss(ctx context.Context, opts ...grpc.CallOption) (ClientStreamingService_AttackBossClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ClientStreamingService_serviceDesc.Streams[0], "/unary.ClientStreamingService/AttackBoss", opts...)
	if err != nil {
		return nil, err
	}
	x := &clientStreamingServiceAttackBossClient{stream}
	return x, nil
}

type ClientStreamingService_AttackBossClient interface {
	Send(*ClientStreamingRequest) error
	CloseAndRecv() (*ClientStreamingResponse, error)
	grpc.ClientStream
}

type clientStreamingServiceAttackBossClient struct {
	grpc.ClientStream
}

func (x *clientStreamingServiceAttackBossClient) Send(m *ClientStreamingRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *clientStreamingServiceAttackBossClient) CloseAndRecv() (*ClientStreamingResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ClientStreamingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ClientStreamingServiceServer is the server API for ClientStreamingService service.
type ClientStreamingServiceServer interface {
	AttackBoss(ClientStreamingService_AttackBossServer) error
}

// UnimplementedClientStreamingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClientStreamingServiceServer struct {
}

func (*UnimplementedClientStreamingServiceServer) AttackBoss(ClientStreamingService_AttackBossServer) error {
	return status.Errorf(codes.Unimplemented, "method AttackBoss not implemented")
}

func RegisterClientStreamingServiceServer(s *grpc.Server, srv ClientStreamingServiceServer) {
	s.RegisterService(&_ClientStreamingService_serviceDesc, srv)
}

func _ClientStreamingService_AttackBoss_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ClientStreamingServiceServer).AttackBoss(&clientStreamingServiceAttackBossServer{stream})
}

type ClientStreamingService_AttackBossServer interface {
	SendAndClose(*ClientStreamingResponse) error
	Recv() (*ClientStreamingRequest, error)
	grpc.ServerStream
}

type clientStreamingServiceAttackBossServer struct {
	grpc.ServerStream
}

func (x *clientStreamingServiceAttackBossServer) SendAndClose(m *ClientStreamingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *clientStreamingServiceAttackBossServer) Recv() (*ClientStreamingRequest, error) {
	m := new(ClientStreamingRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ClientStreamingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "unary.ClientStreamingService",
	HandlerType: (*ClientStreamingServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AttackBoss",
			Handler:       _ClientStreamingService_AttackBoss_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "client_streaming/clientstreamingpb/client_streaming.proto",
}
